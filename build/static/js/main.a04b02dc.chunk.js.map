{"version":3,"sources":["components/nav.js","components/Lists.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["nav","react_default","a","createElement","className","Link","to","Lists","state","datas","sortData","search","onSort","_this$state","_this","sort","b","name","setState","onChange","e","target","value","onSubmit","preventDefault","props","history","push","concat","axios","get","res","console","log","data","sources","this","_this$state2","onClick","type","placeholder","aria-describedby","map","description","category","Component","Search","id","match","params","result","articles","author","src","urlToImage","style","height","background","width","alt","title","content","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a04b02dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default function nav() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-15\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        List\r\n                    </Link>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i>Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i>About\r\n                            </Link>\r\n                        </li> */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Lists extends Component {\r\n    state = {\r\n        datas: [],\r\n        sortData: 'Dessending',\r\n        search: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(\"https://newsapi.org/v1/sources\");\r\n        console.log(res.data.sources)\r\n        this.setState({ datas: res.data.sources })\r\n    }\r\n\r\n    onSort = () => {\r\n        const { sortData, datas } = this.state;\r\n        if (sortData === 'Asscending') {\r\n            // console.log('assecding')\r\n            datas.sort(function (a, b) {\r\n                return ((a.name === b.name) ? 0 : ((a.name > b.name) ? 1 : -1));\r\n            });\r\n            this.setState({ datas, sortData: 'Dessending' });\r\n        }\r\n        if (sortData === 'Dessending') {\r\n            // console.log('dessending')\r\n            datas.sort(function (a, b) {\r\n                return ((b.name === a.name) ? 0 : ((b.name > a.name) ? 1 : -1));\r\n            });\r\n            this.setState({ datas, sortData: 'Asscending' });\r\n        }\r\n    }\r\n    onChange = e => this.setState({ search: e.target.value });\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.history.push(`/search/${this.state.search}`);\r\n    }\r\n\r\n    render() {\r\n        const { datas, sortData } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Article</span> List </h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <button className=\"btn btn-danger\" onClick={this.onSort}>Sort By({sortData})</button>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"text\" className=\"form-control\" onChange={this.onChange} placeholder=\"Search Article\" aria-describedby=\"basic-addon2\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <button className=\"btn btn-outline-secondary\" type=\"submit\">Button</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                {datas.map(data => (\r\n                    <div className=\"card card-body mb-3\">\r\n                        <h4>{data.name}\r\n                        </h4>\r\n\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\"><b>Description: </b> {data.description}</li>\r\n                            <li className=\"list-group-item\"><b>Category: </b>{data.category}</li>\r\n                        </ul>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Search extends Component {\r\n    state = {\r\n        datas: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://newsapi.org/v2/everything?q=${id}&apiKey=91a53883772d44bf8ee89d81249d4ac7`);\r\n\r\n        const result = res.data.articles;\r\n\r\n        this.setState({\r\n            datas: result\r\n        })\r\n        //console.log(result)\r\n    }\r\n\r\n    render() {\r\n        const { datas } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Search Results</h1>\r\n                {datas.map(data => (\r\n                    <div className=\"card card-body mb-3\">\r\n                        <h4>{data.author}\r\n                        </h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <img src={data.urlToImage} style={{\r\n                                    height: '250px',\r\n                                    background: 'cover',\r\n                                    width: '350px'\r\n                                }} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\"><b>Title: </b>{data.title}</li>\r\n                                    <li className=\"list-group-item\"><b>Description: </b> {data.description}</li>\r\n                                    <li className=\"list-group-item\"><b>Content: </b>{data.content}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Nav from './components/nav';\nimport Lists from './components/Lists';\nimport Search from './components/Search';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Lists} />\n            <Route exact path=\"/search/:id\" component={Search} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}